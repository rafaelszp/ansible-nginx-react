user  {{nginx_user}};
worker_processes  {{nginx_worker_processes}};
worker_rlimit_nofile {{nginx_worker_rlimit_nofile}};

error_log  /var/log/nginx/error.log crit;

pid        /var/run/nginx.pid;

events {
        worker_connections  {{nginx_worker_connections}};
        use epoll;
        multi_accept on;
}

http {

    #SSL PROTECTION
    ssl_ciphers "ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS";
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache shared:SSL:10m;
    ssl_dhparam /etc/ssl/self-signed/dhparam.pem;

    #MIME
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    #LOGGING
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main buffer=16k flush=60s;
    #access_log off;

    #TCP
    keepalive_requests {{nginx_keepalive_requests}};
    keepalive_timeout  {{nginx_keepalive_timeout}};

    client_body_timeout {{nginx_client_body_timeout}};
    send_timeout {{nginx_send_timeout}};
    client_max_body_size {{nginx_client_max_body_size}};

    #OTHER
    gzip  on;
    gzip_min_length {{nginx_gzip_min_length}};
    gzip_comp_level {{nginx_gzip_comp_level}};
    gzip_types {{nginx_gzip_types}};
    gzip_proxied expired no-cache no-store private auth;
    gzip_disable "MSIE [1-6]\.";

    sendfile {{nginx_sendfile}};
    tcp_nopush  {{nginx_tcp_nopush}};
    tcp_nodelay {{nginx_tcp_nodelay}};
    open_file_cache {{nginx_open_file_cache}};
    open_file_cache_valid {{nginx_open_file_cache_valid}};
    open_file_cache_min_uses {{nginx_open_file_cache_min_uses}};
    open_file_cache_errors {{nginx_open_file_cache_errors}};

    server_tokens off;
    root {{nginx_document_root}};

    index   index.html index.htm;
    
    #error_page 404 /404.html;
    #error_page 403 /403.html;
    #error_page   500  /50x.html;

    # SERVERS
    #include /etc/nginx/conf.d/*.conf;

    {% block http_upstream %}
        {% for upstream in nginx_upstream %}
            upstream {{upstream.name}} {
                {% for server in app_hosts %}
                    server {{server.host}}:{{app_port}} {{server.params}};
                {% endfor %}
            }
        {% endfor %}
    {% endblock %}

    {% block http_servers %}
        {% for srv in nginx_vhosts %}
            server {

                error_page 404 /404.html;
                error_page 500 502 503 504 /maintenance.html;

                listen {{srv.listen}};
                server_name {{srv.server_name}};

                {% if srv.access_log is defined %}
                access_log {{srv.access_log}};
                {% endif %}

                {% if srv.error_log is defined %}
                error_log {{srv.error_log}};
                {% endif %}

                {% if srv.ssl_config is defined %}
                {{srv.ssl_config}}
                {% endif %}


                #BODY SIZE
                {% if srv.client_max_body_size is defined %}
                client_max_body_size 100000G;
                {%endif%}

                {%if srv.limit_rate is defined %}
                limit_rate {{srv.limit_rate}};
                {% endif %}

                root {{srv.root}};
                {% if srv.headers is defined %}
                {{srv.headers}}
                {% endif%}


                {% block nginx_location %}
                    {% for location in nginx_location %}

                        location /{{location.context_path}} {
                            proxy_pass http://{{location.upstream_name}}/{{location.context_path}};
                            {% if location.extra_config is defined%}
                            {{location.extra_config}}
                            {% endif %}

                        }

                    {% endfor %}
                {% endblock%}

            }
        {% endfor %}
    {% endblock %}






}
